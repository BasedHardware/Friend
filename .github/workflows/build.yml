# Note: In a yml each level is padded by 2 spaces
name:  Create flutter build

on:
  # Runs this action when you push on master
  push:
    branches: [ "main" ]

jobs:
  flutter_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Setup Env
        run: cat .env.template > .env
        working-directory: apps/AppWithWearable

      - name: Run Build Runner
        run: dart run build_runner build --delete-conflicting-outputs
        working-directory: apps/AppWithWearable

      - name: Install dependencies
        run: flutter pub get
        working-directory: apps/AppWithWearable

      - name : Create Build
        working-directory: apps/AppWithWearable
        run: flutter build apk --debug
#        run: flutter build apk --release --split-per-abi

      - name : Create iOS Build
        working-directory: apps/AppWithWearable
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}

