name:  Create flutter build

on:
  # Runs this action when you push on master and development
  push:
    branches:
      - "main"
      - "development"
  pull_request:
    branches:
      - "development"


jobs:
  build_deploy_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: macos-latest

    env:
      KEYSTORE_PATH: apps/AppWithWearable/android/upload-keystore.jks
      ASC_JSON_KEY: ${{ secrets.ASC_JSON_KEY }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD : ${{ secrets.APPLE_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      #Steps for Fastlane
      #1
      #Setup ruby version
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.3'

      #2 Install Bundler
      - name: Install Bundler
        run: gem install bundler

      - name: Cache Ruby gems
        uses: actions/cache@v2
        with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-  

      #3 Install Fastlane
      - name: Install Fastlane
        run: bundle install

      # Setup the env
      - name: Setup Env
        run: cat .env.template > .env
        working-directory: apps/AppWithWearable

      # Build runner
      - name: Run Build Runner
        run: dart run build_runner build --delete-conflicting-outputs
        working-directory: apps/AppWithWearable

      # Decoding jks file
      - name: Decode and write keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.SECRET_JKS }}
        run: echo $KEYSTORE_BASE64 | base64 --decode > $KEYSTORE_PATH


      #Get App Store Connect Key And Write it on current device
      - name: Setup service account json file for Android
        run: echo '${{ secrets.FRIEND_SERVICE_ACCOUNT_JSON }}' > apps/AppWithWearable/android/friend_service_account_key.json

      - name: Build Android App Package
        run: |
            flutter clean
            flutter build appbundle --release
        working-directory: apps/AppWithWearable/android



      - name: Deploy Google Play
        run: bundle exec fastlane alpha_appbundle
        working-directory: apps/AppWithWearable/android


      # Install Flutter Dependencies
      - name: Install dependencies
        run: flutter pub get
        working-directory: apps/AppWithWearable

      #Setup xCode for iOS deployment
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '15.0.1'

      #Get App Store Connect Key And Write it on current device
      - name: Setup app store connect
        run: echo '${{ secrets.ASC_JSON_KEY }}' > apps/AppWithWearable/ios/fastlane/store.json

      #Instal POD files for iOS
      - name: Install Pod
        run: pod install
        working-directory: apps/AppWithWearable/ios

      #Run fastlane to build application and deploy it on testflight
      - name: Run Fastlane for iOS
        run: bundle exec fastlane beta --verbose
        working-directory: apps/AppWithWearable/ios
        env:
          MATCH_PASSWORD : ${{ secrets.MATCH_PASSWORD }}
          ASC_JSON_KEY: ${{ secrets.ASC_JSON_KEY }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          CI: true

